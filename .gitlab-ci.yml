variables:
    OUTDIR: "pcb"
    SCHEMATIC: "pcb/*.kicad_sch"
    BOARD: "pcb/*.kicad_pcb"
    PROJECT: "pcb/*.kicad_pro"

default:
  timeout: 5m
  image: setsoft/kicad_auto:dev_k6
  artifacts:
    exclude:
    - $OUTDIR/**/*.ogv
 
stages:
  - check
  - export
  - publish
 
# JOBS
 
# runs design checks
ERC:
  stage: check
  script:
      - kibot -d $OUTDIR -e $SCHEMATIC -b $BOARD -c .kibot/erc.kibot.yaml -vv
  artifacts:
    when: always
    name: $CI_PROJECT_NAME $CI_JOB_NAME
    paths:
     - $OUTDIR/*-erc.txt
 
DRC:
  stage: check
  script:
      - kibot -d $OUTDIR -e $SCHEMATIC -b $BOARD -c .kibot/drc.kibot.yaml -vv
  allow_failure: true
  artifacts:
    when: always
    name: $CI_PROJECT_NAME $CI_JOB_NAME
    paths:
      - $OUTDIR/*-drc.txt
 
# generates documentation
docs:
  needs: [ERC]
  stage: export
  script:
      - kibot -d $OUTDIR -e $SCHEMATIC -b $BOARD -c .kibot/docs.kibot.yaml -v
  allow_failure: true
  artifacts:
    name: $CI_PROJECT_NAME $CI_JOB_NAME
    paths:
      - $OUTDIR/docs/*.pdf
      - $OUTDIR/docs/datasheets/*.pdf
      - $OUTDIR/docs/bom/*
      - $OUTDIR/img/*.svg
 
# generating cad files
cad:
  needs: [DRC]
  stage: export
  script:
      - kibot -d $OUTDIR -e $SCHEMATIC -b $BOARD -c .kibot/cad.kibot.yaml -v -s all
  allow_failure: true
  artifacts:
    name: $CI_PROJECT_NAME $CI_JOB_NAME
    paths:
      - $OUTDIR/cad/*.brd
      - $OUTDIR/cad/*.step
      - $OUTDIR/cad/dxf/*.dxf

render:
  needs: [DRC]
  stage: export
  script:
      - kibot -d $OUTDIR -e $SCHEMATIC -b $BOARD -c .kibot/render.kibot.yaml -v -s all
  allow_failure: true
  artifacts:
    name: $CI_PROJECT_NAME $CI_JOB_NAME
    paths:
      - $OUTDIR/img/pcb/*.svg
      - $OUTDIR/img/pcb/**/*.svg
      - $OUTDIR/img/render/*.png

# generates fabrication files if commit tagged
gerbers:
  needs: [DRC]
  stage: export
#  rules:
#    - if: $CI_COMMIT_TAG
  script:
    - kibot -d $OUTDIR -e $SCHEMATIC -b $BOARD -c .kibot/gerbers.kibot.yaml -vvvv
  after_script:
    - ls -la
    - ls -la pcb/gerbers/
  allow_failure: false
  artifacts:
    name: $CI_PROJECT_NAME $CI_JOB_NAME
    paths:
      - $OUTDIR/gerbers/*.gbr
      - $OUTDIR/gerbers/*.drl
      - $OUTDIR/gerbers/*.csv

# upload assets
upload:
  needs: [gerbers, docs, render, cad]
  stage: publish
#  rules:
#    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  script:
    - echo "upload files"
  artifacts:
    name: "$CI_PROJECT_NAME $CI_COMMIT_TAG"
    paths:
      - $OUTDIR/docs/**/*
      - $OUTDIR/img/**/*
      - $OUTDIR/cad/**/*
      - $OUTDIR/*.zip
      - $OUTDIR/*.md
      - $SCHEMATIC
      - $BOARD
      - $PROJECT